from pwn import *


def get_max_depth(s):
    d = 0
    max_d = 0

    for ss in s:
        if ss == '(':
            d += 1

        if ss == ')':
            d -= 1

        if d > max_d:
            max_d = d

    return max_d


def add_nodes(n1, n2):
    d1 = get_max_depth(n1)
    d2 = get_max_depth(n2)

    if d1 < d2:
        return n2[0] + n1 + n2[1:]
    elif d1 == d2:
        return n1 + n2
    else:
        return n1[:-1] + n2 + n1[-1]


def main():
    r = remote('2018shell1.picoctf.com', 61344)

    ci = 1

    while ci < 11:

        lines = r.recvrepeat(0.3).split('\n')
        print '\n'.join(lines)

        if 'pico' in '\n'.join(lines):
            #print lines
            break

        print len(lines)
        q = lines[len(lines) - 3].split('=')[0].strip()
        ci = ci + 1
        log.info('Got challenge #{}: {}'.format(ci, q))
        q = q.split()

        while len(q) > 1:
            n1 = q.pop(0)
            q.pop(0)
            n2 = q.pop(0)

            n = add_nodes(n1, n2)

            q = [n] + q

        log.info('Sending: {}'.format(q[0]))
        r.sendline(q[0])

        ll = r.recvuntil('\n')

        print ll

        ci += 1


'''
        if line != '':
            
            print q
        
        ci += 1
        print ci
        
        log.info('Got challenge #{}: {}'.format(ci, q))
        q = q.split()

        queries = {}

        while len(q) > 1:
            n1 = q.pop(0)
            q.pop(0)
            n2 = q.pop(0)

            n = add_nodes(n1, n2)

            q = [n] + q

        log.info('Sending: {}'.format(q[0]))
        r.sendline(q[0])

        ll = r.recvuntil('\n')

        print ll

        

'''
if __name__ == '__main__':
    main()
